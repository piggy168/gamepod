c
backer_params
@backer.reward
@backer
c
@project
@backer
c
backer_params
backer_param
@backer
@backer.reward
Backer.reward
@backer
@project
c
@backer.reward
@project
c
@backer
c
@backer
c
@project.backers
@project
@reward
@project
@backer
c
@backer.reward
@backer.project
@backer
@backer.reward
@backer.project
@backer
@project
c
backer_params
user_params
@project
c
Reward.find(19)
backer_params
backer_param
@backer
@backer.project
@backer.reward.project
backer_params
@project
c
@project
c
@project.backers.group(:user_id).count.keys.count
@project.backers.group(:user_id).count.keys
@project.backers.group(:user_id).count
@project.backers.group(:user_id)
@project.backers.distinct.count("user_id")
@project.backers.distinct.count(
@project.backers.distinct.count(:user_id)
@project.backers
@project.backers.distinct.count
@project.backers.count(:user_id).distinct
backer_params
@project.backers.count(:user_id, :distinct => true)
@project
c
@project.backers.count("user_id", :distinct => true);
@project
@backer.project
@backer
@project.backers.count(:distinct=>true);
@project.backers.count(distinct=>true);
@project.backers.count(:user_id, :distinct => true);
@project.backers.count(:user_id, :distinct => true)
@project.backers.count
@project.backers.count(:user_id, :distinct => true)
@project
c
cc
c
@backer.save
@backer
c
@backer
Backer.new(backer_params)
Backer.new
@backer
c
backer_params
c
s
backer_params
c
success
c
reward
a
x
c
success
c
Reward.new(title: "adsf", description: "asdf", amount: 3, project_id: 2, limit: 2).save
Reward.new(title: "adsf", description: "asdf", amount: 3, project_id: 2, limit: 2}.save
rewards
Reward.new(title: reward[:title], description: reward[:description], amount: reward[:amount], limit: reward[:limit], project_id: reward[:project_id])
c
rewards
c
rewards["0"][:title]
rewards["0"]
rewards{"0"]
success["0"]
success["0"]["title"]
success["0"][:title]
a
a.title = "12"
a = Reward.new
Reward.new(rewards["0"])
rewards
c
rewards
c
Reward.new
Rewards.new(rewards["0"])
rewards["0"]
rewards["0']
rewards[:0]
rewards[0]
rewards
Reward.new
success = rewards.map{|key, reward| Reward.new(reward).save}
c
rewards
c
@project.save
params
c
params[:project][:reward]
reward_params
c
reward_params
project_params
reward_params
project_params
project)params
params.require(:project).permit(:reward)
reward_params
params
reward_params
success
c
params[:project][:reward].each{|key, value|  params[:project][:reward][key][:projec_id]=3}
params[:project][:reward].each
params[:project][:reward]
params[:project][:reward].keys
JSON.parse(params[:project][:reward]).keys
JSON.parse(params[:project][:reward])
require 'JSON'
require 'json'
JSON.parse(params[:project][:reward])
params[:project][:reward]
    :creater_id, :end_date, :goal, :category, :funded)
    params.require(:project).permit(:title, :description, :photo_url,
JSON.parse(def project_params
params[:project][:reward]
params[:project]
params
params["reward"]
params[:reward]
params.reward
params
reward_params
c
@project
c
@project.save!
@project.save
@project
project_params[:creater_id]
project_params[:creater_id]=project_params[:creater_id].to_i
project_params[:creater_id]
project_params[creater_id]
project_params[creater_id]=
project_params
project params
project_params[:creater_id]=project_params[:creater_id].to_i
project_params[creater_id]=project_params[creater_id].to_i
project_params
project_param
JSON.parse(params)
params
JSON.parse("funded"=>"0');
JSON.parse("funded"=>"0')
JSON.parse(project_params)
json.parse(project_params)
project_params
c
project_params
c
project_params
c
s
project_params
c
project_params
project
c
project_params
c
params
project_params
c
params
data
project_params
c
params
c
exit
params[:id]
params
c
